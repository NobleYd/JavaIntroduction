package java对象字节码;

//数据类型默认大小

//boolean	1
//byte		1
//char		2
//short		2
//int		4
//float		4
//long		8
//double	8
//一个引用类型数据占用1个字长。32bit机器为4字节。64bit机器为8字节。

//java对象头占用2个字长
//对于32bit机器，字长为32bit也就是4个字节。--->java对象头就是8个字节大小。
//对于64bit机器，字长为64bit也就是8个字节。--->java对象头就是16个字节大小。
//数组类型的会比普通类型多大小，因为要存储数组的长度大小。

//例如在32位的HotSpot虚拟机中对象未被锁定的状态下，
//Mark Word的32个Bits空间中的25Bits用于存储对象哈希码（HashCode），
//4Bits用于存储对象分代年龄，2Bits用于存储锁标志位，1Bit固定为0，
//在其他状态（轻量级锁定、重量级锁定、GC标记、可偏向）下对象的存储内容如下表所示。 
//存储内容	标志位	状态
//对象哈希码、对象分代年龄	01	未锁定
//指向锁记录的指针	00	轻量级锁定
//指向重量级锁的指针	10	膨胀（重量级锁定）
//空，不需要记录信息	11	GC标记
//偏向线程ID、偏向时间戳、对象分代年龄	01	可偏向
public class 对象头 {

}
